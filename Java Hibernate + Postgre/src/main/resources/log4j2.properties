# appender - main obj, which print; console - name logger (maybe any)
## create obj in appenders
appenders = myconsole

## setting obj in appenders
# what plugin use for out (u can use file, network etc)
appender.myconsole.type = console
# must use UPPERCASE
appender.myconsole.name = mystdout

# use pattern (out in needed form) for format text
# PatternLayout - insert pattert
appender.myconsole.layout.type = PatternLayout
#                                   class level-log     date-time               stream  message %n=\n
#appender.myconsole.layout.pattern = %C{1.} [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] - %msg%n
appender.myconsole.layout.pattern = %C{1.} [%-5level] %d{HH:mm:ss} - %msg%n

# where out (to console)
rootLogger.appenderRefs = console
# link for settings logger (up writen)
rootLogger.appenderRef.console.ref = mystdout

# here can on/off logging for needed packages
# values: debug or DEBUG
# all, info, debug, warn (warning)
rootLogger.level = info

# out service information hibernate
# for classes in packages org.hibernate
# hiber - any name
logger.hiber.name=org.hibernate
logger.hiber.level=warn

# print SQL queries (here SQL - UPPERCASE)
logger.sql.name=org.hibernate.SQL
logger.sql.level=trace

# params SQL query
logger.sqlvars.name=org.hibernate.type
logger.sqlvars.level=warn

