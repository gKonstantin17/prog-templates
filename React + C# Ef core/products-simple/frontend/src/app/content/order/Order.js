import {
    Table,TableBody,TableCell,TableContainer, TableHead, TableRow, Paper,
} from '@mui/material';
import {formatDate} from "../../App";
import {OrderApi} from "./OrderApi";
import {useEffect, useState} from "react";
import {OrderCreate} from "./OrderCreate";
import {OrderUpdate} from "./OrderUpdate";
import {OrderDelete} from "./OrderDelete";

function Order() {
    // –≤—ã–ø–æ–ª–Ω—è–µ—Ç get –∑–∞–ø—Ä–æ—Å –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Å –∑–∞–∫–∞–∑–∞–º–∏
    // —Ç–∞–∫–∂–µ —Å —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è –æ–∫–Ω–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è, –∏–∑–º–µ–Ω–µ–Ω–∏—è, —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
    // –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ OrderApi.js

    // –¥–ª—è get –∑–∞–ø—Ä–æ—Å–∞
    const {data,error,loading,getAll} = OrderApi();
    useEffect( () => {  // –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ Order
        getAll()
    },[]);

    const [selectedOrderId, setSelectedOrderId] = useState(null); // –≤—ã–±–æ—Ä order
    const [createModalOpen, setCreateModalOpen] = useState(false); // –æ—Ç–∫—Ä—ã—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ
    const [updateModalOpen, setUpdateModalOpen] = useState(false); // –æ—Ç–∫—Ä—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    const [deleteModalOpen, setDeleteModalOpen] = useState(false); // –æ—Ç–∫—Ä—ã—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ
    if (error) return (<div>–û—à–∏–±–∫–∞: {error.message}</div>)
    if (loading) return (<div>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö</div>)
    return(<div>
        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>
            <button onClick={() => setCreateModalOpen(true)}>‚ûï</button>
        </div>
        {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞*/}
        <OrderCreate
            open={createModalOpen}
            onClose={() => setCreateModalOpen(false)}
            reload={getAll}
        />
        <OrderUpdate
            open={updateModalOpen}
            onClose={() => setUpdateModalOpen(false)}
            reload={getAll}
            id={selectedOrderId}
        />
        <OrderDelete
            open={deleteModalOpen}
            onClose={() => setDeleteModalOpen(false)}
            reload={getAll}
            id={selectedOrderId}
        />
        {/* –¢–∞–±–ª–∏—Ü–∞ —Å –∑–∞–∫–∞–∑–∞–º–∏ */}
        <TableContainer component={Paper}>
            <Table>
                <TableHead>
                    <TableRow>
                        <TableCell>Id</TableCell>
                        <TableCell>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</TableCell>
                        <TableCell>–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–Ω–µ–Ω–∏—è</TableCell>
                        <TableCell>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</TableCell>
                        <TableCell>–¶–µ–Ω–∞</TableCell>
                        <TableCell>–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞</TableCell>
                        <TableCell>Id —Ç–æ–≤–∞—Ä–∞</TableCell>
                    </TableRow>
                </TableHead>
                <TableBody>
                    {data.map((order, idx) => (
                        <TableRow key={idx}>
                            <TableCell>{order.id}</TableCell>
                            <TableCell>{formatDate(order.createDate)}</TableCell>
                            <TableCell>{formatDate(order.deadline)}</TableCell>
                            <TableCell>{order.count}</TableCell>
                            <TableCell>{order.price} ‚ÇΩ</TableCell>
                            <TableCell>{order.fullPrice} ‚ÇΩ</TableCell>
                            <TableCell>{order.product_id}</TableCell>
                            <TableCell>
                                <button onClick={() => {
                                    setSelectedOrderId(order.id)
                                    setUpdateModalOpen(true);}}>
                                    ‚úèÔ∏è
                                </button>
                            </TableCell>
                            <TableCell>
                                <button onClick={() => {
                                    setSelectedOrderId(order.id)
                                    setDeleteModalOpen(true)
                                }}>
                                    üóëÔ∏è
                                </button>
                            </TableCell>
                        </TableRow>
                    ))}
                </TableBody>
            </Table>
        </TableContainer>
    </div>)
}
export {Order}